name: CI/CD Pipeline for AWS Lambda CRUD
on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - main
      - dev
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # Corregido: Se eliminó la definición duplicada 'AWS_REGION: us-east-1'
      AWS_REGION: us-west-1 
      SERVICE_NAME: nodejs-aws-lambda-crud
      # Esta variable de entorno no es usada por Serverless Framework directamente, pero se mantiene si es para scripts
      TASKS_TABLE: TaskTable-${{ github.ref_name }} 
    steps:
      # 1. Checkout repository (Se eliminó la línea duplicada de 'name')
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      # 2. Setup Node.js (Se eliminó la línea duplicada de 'name')
      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x' 
          cache: 'npm'
      # 3. Instalación de dependencias (Corregido: Se eliminó la línea de 'node-version' mal indentada y duplicada)
      - name: 📦 Install dependencies
        run: npm ci 
      # 4. Run tests (optional) - Se mantiene el orden lógico: primero tests, luego despliegue
      - name: 🧪 Run tests (optional)
        run: npm test
        continue-on-error: true
      # 5. Instalar Serverless Framework (Se eliminó el paso duplicado 'Install Serverless Framework')
      - name: 🔨 Install Serverless Framework
        run: npm install -g serverless
      # 6. Configurar AWS credentials (Manejo de credenciales estándar y seguro)
      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 7. Despliegue Condicional a AWS Lambda (Corregido: Se eliminó el paso duplicado y menos seguro 'Deploy Serverless Service')
      - name: 🚀 Deploy to AWS Lambda
        run: |
          # Usamos 'prod' para la rama principal (main) y 'dev' para el resto
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "🚀 Deploying to production..."
            # Asegúrese de que este comando sea 'serverless' y no 'npx serverless' si lo instaló globalmente
            serverless deploy --stage prod --verbose
          else
            echo "🚧 Deploying to development..."
            serverless deploy --stage dev --verbose
          fi
      # 8. Serverless info (Para obtener el resultado del despliegue)
      - name: 📝 Serverless info
        run: serverless info --verbose
